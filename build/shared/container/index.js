"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const admins_repository_1 = __importDefault(require("../../modules/admins/contracts/repositories/admins.repository"));
const mikro_admins_repository_1 = __importDefault(require("../../modules/admins/implementations/mikro/repositories/mikro-admins.repository"));
const categories_repository_1 = __importDefault(require("../../modules/categories/contracts/repositories/categories.repository"));
const mikro_categories_repositories_1 = __importDefault(require("../../modules/categories/implementations/mikro/repositories/mikro-categories.repositories"));
const collections_repository_1 = __importDefault(require("../../modules/collections/contracts/repositories/collections.repository"));
const mikro_collections_repository_1 = __importDefault(require("../../modules/collections/implementations/mikro/repositories/mikro-collections.repository"));
const couter_types_repository_1 = __importDefault(require("../../modules/counter-types/contracts/repositories/couter-types.repository"));
const mikro_counter_types_repository_1 = __importDefault(require("../../modules/counter-types/implementations/mikro/repositories/mikro-counter-types.repository"));
const groups_repository_1 = __importDefault(require("../../modules/groups/contracts/repositories/groups.repository"));
const mikro_groups_repository_1 = __importDefault(require("../../modules/groups/implementations/mikro/repositories/mikro-groups.repository"));
const logs_repository_1 = __importDefault(require("../../modules/logs/contracts/repositories/logs-repository"));
const mikro_logs_repository_1 = __importDefault(require("../../modules/logs/implementations/mikro/repositories/mikro-logs-repository"));
const machine_logs_repository_1 = __importDefault(require("../../modules/machine-logs/contracts/repositories/machine-logs.repository"));
const mikro_machine_logs_repository_1 = __importDefault(require("../../modules/machine-logs/implementations/mikro/repositories/mikro-machine-logs.repository"));
const machines_repository_1 = __importDefault(require("../../modules/machines/contracts/repositories/machines.repository"));
const mikro_machines_repository_1 = __importDefault(require("../../modules/machines/implementations/mikro/repositories/mikro-machines.repository"));
const notifications_repostory_1 = __importDefault(require("../../modules/notifications/contracts/repositories/notifications.repostory"));
const mikro_notifications_repository_1 = __importDefault(require("../../modules/notifications/implementations/mikro/repositories/mikro-notifications.repository"));
const points_of_sale_repository_1 = __importDefault(require("../../modules/points-of-sale/contracts/repositories/points-of-sale.repository"));
const mikro_points_of_sale_repository_1 = __importDefault(require("../../modules/points-of-sale/implementations/mikro/repositories/mikro-points-of-sale.repository"));
const product_logs_repository_1 = __importDefault(require("../../modules/products/contracts/repositories/product-logs.repository"));
const mikro_product_logs_repository_1 = __importDefault(require("../../modules/products/implementations/mikro/repositories/mikro-product-logs.repository"));
const routes_repository_1 = __importDefault(require("../../modules/routes/contracts/repositories/routes.repository"));
const mikro_routes_repository_1 = __importDefault(require("../../modules/routes/implementations/mikro/repositories/mikro-routes.repository"));
const telemetry_logs_repository_1 = __importDefault(require("../../modules/telemetry-logs/contracts/repositories/telemetry-logs.repository"));
const mikro_telemetry_logs_repository_1 = __importDefault(require("../../modules/telemetry-logs/implementations/mikro/repositories/mikro-telemetry-logs.repository"));
const telemetry_boards_repository_1 = __importDefault(require("../../modules/telemetry/contracts/repositories/telemetry-boards.repository"));
const mikro_telemetry_boards_repository_1 = __importDefault(require("../../modules/telemetry/implementations/mikro/repositories/mikro-telemetry-boards.repository"));
const universal_financial_repository_1 = __importDefault(require("../../modules/universal-financial/contracts/repositories/universal-financial.repository"));
const mikro_universal_financial_repository_1 = __importDefault(require("../../modules/universal-financial/implementations/mikro/repositories/mikro-universal-financial.repository"));
const users_repository_1 = __importDefault(require("../../modules/users/contracts/repositories/users.repository"));
const mikro_users_repository_1 = __importDefault(require("../../modules/users/implementations/mikro/repositories/mikro-users.repository"));
const tsyringe_1 = require("tsyringe");
require("../../providers");
tsyringe_1.container.registerSingleton('AdminsRepository', mikro_admins_repository_1.default);
tsyringe_1.container.registerSingleton('UsersRepository', mikro_users_repository_1.default);
tsyringe_1.container.registerSingleton('GroupsRepository', mikro_groups_repository_1.default);
tsyringe_1.container.registerSingleton('PointsOfSaleRepository', mikro_points_of_sale_repository_1.default);
tsyringe_1.container.registerSingleton('CategoriesRepository', mikro_categories_repositories_1.default);
tsyringe_1.container.registerSingleton('MachinesRepository', mikro_machines_repository_1.default);
tsyringe_1.container.registerSingleton('RoutesRepository', mikro_routes_repository_1.default);
tsyringe_1.container.registerSingleton('CounterTypesRepository', mikro_counter_types_repository_1.default);
tsyringe_1.container.registerSingleton('TelemetryBoardsRepository', mikro_telemetry_boards_repository_1.default);
tsyringe_1.container.registerSingleton('CollectionsRepository', mikro_collections_repository_1.default);
tsyringe_1.container.registerSingleton('TelemetryLogsRepository', mikro_telemetry_logs_repository_1.default);
tsyringe_1.container.registerSingleton('ProductLogsRepository', mikro_product_logs_repository_1.default);
tsyringe_1.container.registerSingleton('NotificationsRepository', mikro_notifications_repository_1.default);
tsyringe_1.container.registerSingleton('UniversalFinancialRepository', mikro_universal_financial_repository_1.default);
tsyringe_1.container.registerSingleton('MachineLogsRepository', mikro_machine_logs_repository_1.default);
tsyringe_1.container.registerSingleton('LogsRepository', mikro_logs_repository_1.default);
